version: "3.9"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: driving-school-db
    restart: unless-stopped
    environment:
      TZ: Europe/Warsaw
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: driving_school
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d driving_school || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - driving-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: driving-school-redis
    restart: unless-stopped
    environment:
      TZ: Europe/Warsaw
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - driving-network

  # Next.js Application (dev + hot reload)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: driving-school-app
    restart: unless-stopped
    environment:
      TZ: Europe/Warsaw
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/driving_school?schema=public
      DIRECT_URL: postgresql://postgres:postgres123@postgres:5432/driving_school?schema=public
      REDIS_URL: redis://redis:6379
      NEXTAUTH_URL: http://localhost:3000
      NEXT_PUBLIC_APP_URL: http://localhost:3000
      NEXTAUTH_SECRET: development-secret-key-change-in-production
      # –Ø–∫—â–æ —É —Ä—ñ–¥–∫—ñ—Å–Ω–∏—Ö –≤–∏–ø–∞–¥–∫–∞—Ö –Ω–µ –±–∞—á–∏—Ç—å –∑–º—ñ–Ω–∏ ‚Äî —Ä–æ–∑–∫–æ–º–µ–Ω—Ç—É–π –¥–≤—ñ –Ω–∏–∂–Ω—ñ:
      # CHOKIDAR_USEPOLLING: "true"
      # WATCHPACK_POLLING: "true"
      NEXT_TELEMETRY_DISABLED: "1"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    # –ú–æ–Ω—Ç—É—î–º–æ –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç (–∑—Ä—É—á–Ω–æ –¥–ª—è hot-reload) + —ñ–∑–æ–ª—é—î–º–æ node_modules —Ç–∞ .next —É named volumes
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
      - next-cache:/app/.next
    networks:
      - driving-network
    # –ê–≤—Ç–æ-—ñ–Ω—Å—Ç–∞–ª—è—Ü—ñ—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π, Prisma push + generate, —Å–∏–¥, dev-—Å–µ—Ä–≤–µ—Ä –∑ 0.0.0.0
    command: >
      sh -c "
        # 1) –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ, —è–∫—â–æ –Ω–µ–º–∞—î next
        if [ ! -x node_modules/.bin/next ]; then
          echo 'üì¶ Installing dependencies...';
          if [ -f package-lock.json ]; then npm ci; else npm install; fi;
        fi &&

        # 2) –ß–µ–∫–∞—î–º–æ –ë–î
        echo '‚è≥ Waiting for database connection...' &&
        until nc -z postgres 5432; do echo 'Waiting for PostgreSQL...'; sleep 2; done &&

        # 3) Prisma
        echo 'üîÉ Prisma db push...' &&
        npx prisma db push --skip-generate --accept-data-loss &&
        echo 'üß¨ Prisma generate...' &&
        npx prisma generate &&

        # 4) Seed (–Ω–µ —Ñ–∞—Ç–∞–ª—å–Ω–æ —É dev)
        if [ -f prisma/seed/index.js ]; then
          echo 'üå± Seeding database...'; node prisma/seed/index.js || echo '‚ö†Ô∏è Seed failed (non-fatal in dev)';
        fi &&

        # 5) –°—Ç–∞—Ä—Ç dev-—Å–µ—Ä–≤–µ—Ä–∞
        echo 'üöÄ Starting Next.js dev server...' &&
        npm run dev
      "

  # Adminer –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ë–î (–ø–æ—Ä—Ç –∑–º—ñ–Ω–∏–≤ –Ω–∞ 8081, –±–æ 8080 –∑–∞–π–º–∞—î Portainer/Traefik)
  adminer:
    image: adminer:latest
    container_name: driving-school-adminer
    restart: unless-stopped
    environment:
      TZ: Europe/Warsaw
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - driving-network

networks:
  driving-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  node_modules:
    driver: local
  next-cache:
    driver: local
